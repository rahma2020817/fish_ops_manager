pipeline {
    agent any
    
    environment {
        DOCKER_IMAGE = "beddi006/backend:${env.BUILD_NUMBER}"
        KUBECONFIG = credentials('kubeconfig') // Remplace par l'ID de tes credentials Kubeconfig
    }

    stages {
        stage('Build') {
            steps {
                script {
                    // Construire l'image Docker et taguer avec BUILD_NUMBER
                    sh "docker build -t ${DOCKER_IMAGE} ./backend/"
                }
            }
        }
        stage('Push image') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dokerhub', usernameVariable: 'USER', passwordVariable: 'PASSWORD')]) {
                        docker.withRegistry('https://registry.hub.docker.com', 'dokerhub') {
                            sh "echo $PASSWORD | docker login -u $USER --password-stdin"
                            sh "docker push ${DOCKER_IMAGE}"
                        }
                    }
                }
            }
        }
        stage('Deploy to Kubernetes with ArgoCD') {
            steps {
                script {
                    // Synchroniser l'application avec ArgoCD
                    sh "argocd app sync backend" // Remplace 'backend' par le nom de ton application ArgoCD
                }
            }
        }
    }
}
